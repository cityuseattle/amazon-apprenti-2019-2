import aws from 'aws-sdk';
import db from '../dynamo';
import hashPass from '../passwordhashing';
import mapper from '../mapper';


import {
    attribute,
    hashKey,
    rangeKey,
    table,
    autoGeneratedHashKey,
} from '@aws/dynamodb-data-mapper-annotations'

@table('usernames')
export class User {
    @hashKey()
    userName?: string;
    @attribute()
    email?: string;
    @attribute()
    password?: string;
    @attribute()
    age?: number


    // This property will not be saved to DynamoDB.
}

export function UserInitializer(name: string, email: string, password: string, age: number) {
 let newUser = Object.assign(new User(), {userName: name, email: email, password: hashPass(password), age: age});
}

export function createUser(username: string, password: string, email: string, age: number) {
  mapper.put(Object.assign(new User, {userName: username, password: password, email: email, age: age}))
    .then(objectSaved => {
      console.log(objectSaved)
    })
    .catch(err => {
      console.log(err, err.stack);
    })
  }
export async function findUser(username: string) {
  let user = await mapper.get(Object.assign(new User, {userName: username}));
  return user
}
